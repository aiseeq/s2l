
syntax = "proto3";
option go_package = "./;api";
import "gogo.proto";

package SC2APIProtocol;

//
// Observation
//

message ObservationUI {
repeated ControlGroup groups = 1;
oneof panel {
SinglePanel single = 2;
MultiPanel multi = 3;
CargoPanel cargo = 4;
ProductionPanel production = 5;
}
}

message ControlGroup {
uint32 control_group_index = 1;
uint32 leader_unit_type = 2 [(gogoproto.casttype) = "UnitTypeID"];
uint32 count = 3;
}

message UnitInfo {
uint32 unit_type = 1 [(gogoproto.casttype) = "UnitTypeID"];
uint32 player_relative = 2;
int32 health = 3;
int32 shields = 4;
int32 energy = 5;
int32 transport_slots_taken = 6;
float build_progress = 7;
UnitInfo add_on = 8;
int32 max_health = 9;
int32 max_shields = 10;
int32 max_energy = 11;
}

message SinglePanel {
UnitInfo unit = 1;
int32 attack_upgrade_level = 2;
int32 armor_upgrade_level = 3;
int32 shield_upgrade_level = 4;
repeated int32 buffs = 5;
}

message MultiPanel {
repeated UnitInfo units = 1;
}

message CargoPanel {
UnitInfo unit = 1;
repeated UnitInfo passengers = 2;
int32 slots_available = 3;
}

message BuildItem {
uint32 ability_id = 1 [(gogoproto.casttype) = "AbilityID"];
float build_progress = 2;
}

message ProductionPanel {
UnitInfo unit = 1;



repeated UnitInfo build_queue = 2;
repeated BuildItem production_queue = 3;
}


//
// Action
//

message ActionUI {
oneof action {
ActionControlGroup control_group = 1;
ActionSelectArmy select_army = 2;
ActionSelectWarpGates select_warp_gates = 3;
ActionSelectLarva select_larva = 4;
ActionSelectIdleWorker select_idle_worker = 5;
ActionMultiPanel multi_panel = 6;
ActionCargoPanelUnload cargo_panel = 7;
ActionProductionPanelRemoveFromQueue production_panel = 8;
ActionToggleAutocast toggle_autocast = 9;
}
}

message ActionControlGroup {
enum ControlGroupAction {
ControlGroupAction_nil = 0 [(gogoproto.enumvalue_customname) = "nil"];
Recall = 1;
Set = 2;
Append = 3;
SetAndSteal = 4;
AppendAndSteal = 5;
}
ControlGroupAction action = 1;
uint32 control_group_index = 2;
}

message ActionSelectArmy {
bool selection_add = 1;
}

message ActionSelectWarpGates {
bool selection_add = 1;
}

message ActionSelectLarva {
}

message ActionSelectIdleWorker {
enum Type {
Type_nil = 0 [(gogoproto.enumvalue_customname) = "nil"];
Set = 1;
Add = 2;
All = 3;
AddAll = 4;
}
Type type = 1;
}

message ActionMultiPanel {
enum Type {
Type_nil = 0 [(gogoproto.enumvalue_customname) = "nil"];
SingleSelect = 1;
DeselectUnit = 2;
SelectAllOfType = 3;
DeselectAllOfType = 4;
}
Type type = 1;
int32 unit_index = 2;
}

message ActionCargoPanelUnload {
int32 unit_index = 1;
}

message ActionProductionPanelRemoveFromQueue {
int32 unit_index = 1;
}

message ActionToggleAutocast {
int32 ability_id = 1 [(gogoproto.casttype) = "AbilityID"];
}
